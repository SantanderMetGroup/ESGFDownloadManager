<!--
CacheManager Configuration
==========================

Also, specifying a maxBytesLocalOffHeap at the CacheManager level will result in overflowToOffHeap to be true by default. If you don't want
a specific cache to overflow to off heap, you'll have to set overflowToOffHeap="false" explicitly

Here is an example of CacheManager level resource tuning, which will use up to 400M of heap and 2G of offHeap:

<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd"
         updateCheck="true" monitoring="autodetect"
         dynamicConfig="true" maxBytesLocalHeap="400M" maxBytesLocalOffHeap="2G">

-->
<ehcache xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="true" monitoring="autodetect" dynamicConfig="true">
<!--
    DiskStore configuration
    =======================

    The following properties are translated:
    * user.home - User's home directory
    * user.dir - User's current working directory
    * java.io.tmpdir - Default temp file path
    * ehcache.disk.store.dir - A system property you would normally specify on the command line
      e.g. java -Dehcache.disk.store.dir=/u01/myapp/diskdir ...

    Subdirectories can be specified below the property e.g. java.io.tmpdir/one

    -->
    <diskStore path="user.dir"/>
    
    <!--
    Default Cache configuration. These settings will be applied to caches
    created programmatically using CacheManager.add(String cacheName).
    This element is optional, and using CacheManager.add(String cacheName) when
    its not present will throw CacheException

    The defaultCache has an implicit name "default" which is a reserved cache name.
    --><defaultCache maxEntriesLocalHeap="10000" eternal="false" timeToIdleSeconds="120" timeToLiveSeconds="120" diskSpoolBufferSizeMB="30" maxEntriesLocalDisk="10000000" diskExpiryThreadIntervalSeconds="120" memoryStoreEvictionPolicy="LRU"><persistence strategy="localTempSwap"/></defaultCache>

    <!--
    Cache configuration. These settings will be applied to caches
    created programmatically using CacheManager.add(String cacheName).
    This element is optional, and using CacheManager.add(String cacheName) when
    its not present will throw CacheException
    -->
    
    <cache name="sampleCache1" maxEntriesLocalHeap="10000" maxEntriesLocalDisk="1000" eternal="false" diskSpoolBufferSizeMB="20" timeToIdleSeconds="300" timeToLiveSeconds="600" memoryStoreEvictionPolicy="LFU" transactionalMode="off"><persistence strategy="localTempSwap"/></cache>
    <!--     
     name: 
       Sets the name of the cache. This is used to identify the cache. It must be unique.
     maxEntriesLocalHeap:
       Sets the maximum number of objects that will be held on heap memory.  0 = no limit. 
     eternal:
       Sets whether elements are eternal. If eternal,  timeouts are ignored and the
       element is never expired.
     
    overflowToOffHeap:
      (boolean) This feature is available only in enterprise versions of Ehcache.
       When set to true, enables the cache to utilize off-heap memory
       storage to improve performance. Off-heap memory is not subject to Java
       GC. The default value is false.
       
    maxBytesLocalHeap:
    
       Defines how many bytes the cache may use from the VM's heap. If a CacheManager
       maxBytesLocalHeap has been defined, this Cache's specified amount will be
       subtracted from the CacheManager. Other caches will share the remainder.
       This attribute's values are given as <number>k|K|m|M|g|G for
       kilobytes (k|K), megabytes (m|M), or gigabytes (g|G).
       For example, maxBytesLocalHeap="2g" allots 2 gigabytes of heap memory.
       If you specify a maxBytesLocalHeap, you can't use the maxEntriesLocalHeap attribute.
       maxEntriesLocalHeap can't be used if a CacheManager maxBytesLocalHeap is set.
       
    maxBytesLocalOffHeap:
       This feature is available only in enterprise versions of Ehcache.
       Sets the amount of off-heap memory this cache can use, and will reserve.
       This setting will set overflowToOffHeap to true. Set explicitly to false to disable overflow behavior.
       Note that it is recommended to set maxEntriesLocalHeap to at least 100 elements
       when using an off-heap store, otherwise performance will be seriously degraded,
       and a warning will be logged.
       The minimum amount that can be allocated is 128MB. There is no maximum.
       
    strategy:
       Configures the type of persistence provided by the configured cache.  This is 
       localRestartable - Enables the RestartStore and copies all cache entries 
       (on-heap and/or off-heap) to disk. This option provides fast restartability with fault 
       tolerant cache persistence on disk. It is available for Enterprise Ehcache users only.
     -->
    <cache name="restartableCache" maxEntriesLocalHeap="1000" eternal="true" overflowToOffHeap="true" maxBytesLocalOffHeap="200m"><persistence strategy="localRestartable"/></cache>
    <!-- <cache name="restartableCache" maxBytesLocalHeap="400m" eternal="true" overflowToOffHeap="true" maxBytesLocalOffHeap="200m"><persistence strategy="localRestartable"/></cache>
      -->
    <!--<cache name="restartableCache" maxBytesLocalHeap="400m" eternal="true" overflowToOffHeap="false"><persistence strategy="localRestartable"/></cache>
     --> 
     <!--<managementRESTService enabled="true" bind="<127.0.0.1>:<9888>"/>  -->
   </ehcache>